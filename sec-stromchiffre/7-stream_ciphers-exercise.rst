.. meta:: 
    :author: Michael Eichberg
    :keywords: exercise, stream ciphers, random number generators

.. |date| date::

.. image:: logo.png
    :align: right


IT-Security Cryptography and Secure Communications
==================================================
    
:Exercise: **Stream Ciphers and RNGs**
:Lecturer: *Prof. Dr. Michael Eichberg*
:Version: |date|


1) Test for randomness: Let's assume that we have a sequence of bits generated by some RNG. What is the expected result of using common compression tools (e.g., 7zip, gzip, rar, ...) always using the respective best compression mode?

  .. admonition:: Solution
    
     No relevant compression should be possible! If so, the randomness is highly questionable. High randomness implies a high entropy and therefore nothing to compress. Effectively the file should even be larger due to the required metadata.

2) Implement an LCG to study how it behaves when the values of :math:`a`, :math:`c` and :math:`m` change. 

  Try to find values that produce a supposedly random sequence.

  Test the RNG with the following value:

  .. code:: pseudocode

    lcg(seed,a,c,m,number_of_random_values_to_generate)
    lcg(1234,8,8,256,100)
    lcg(1234,-8,8,256,100)
    lcg(1234,-8,8,256,100)

  .. admonition:: Solution

    See `Jupyter Notebook <https://github.com/Delors/Course_W3M20014/blob/main/7-stream_ciphers.ipynb>`__.


