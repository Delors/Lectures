.. meta::
    :version: renaissance
    :author: Michael Eichberg
    :keywords: "CVSS", "CVE", "VEP"
    :description lang=de: Verteilte Systeme
    :id: lecture-security-cvss-cve-vep
    :first-slide: last-viewed
    :master-password: WirklichSchwierig!

.. include:: ../docutils.defs



Von der Bedeutung von Schwachstellen
===============================================================

.. rubric:: CVSS, CVE, CVD, KEV, EPSS, VEP

:Dozent: `Prof. Dr. Michael Eichberg <https://delors.github.io/cv/folien.de.rst.html>`__
:Kontakt: michael.eichberg@dhbw.de
:Version: 1.1.1

.. supplemental::

  :Folien:

      **HTML**

      |html-source|

      **PDF**

      |pdf-source|
  :Fehler melden:
      https://github.com/Delors/delors.github.io/issues



Inhalt
----------------

- `Common Vulnerability Scoring System (CVSS)`_
- `Common Vulnerabilities and Exposures (CVE)`_
- `National Vulnerability Database (NVD)`_
- `Exploit Prediction Scoring System (EPSS)`_
- `Schwachstellenmanagement`_



.. class:: new-section transition-fade

Common Vulnerability Scoring System (CVSS)
--------------------------------------------


Definition von Schwachstellen nach CVE
------------------------------------------------------------------

.. epigraph::

    "Eine Schwachstelle in der Berechnungslogik (z. B. Code), die in Software- und Hardwarekomponenten gefunden wird und die, wenn sie ausgenutzt wird, zu einer negativen Auswirkung auf die **Vertraulichkeit**, **Integrität** oder **Verfügbarkeit** führt. Die Behebung der Schwachstellen in diesem Zusammenhang umfasst in der Regel Änderungen am Code, kann aber auch Änderungen an der Spezifikation oder sogar die Ablehnung der Spezifikation (z. B. die vollständige Entfernung der betroffenen Protokolle oder Funktionen) beinhalten."

    -- https://nvd.nist.gov/vuln (Übersetzt mit DeepL)

.. container:: incremental margin-top-2em

   In der Praxis werden n-Day und 0-Day Schwachstellen unterschieden.



Das Common Vulnerability Scoring System (CVSS)\ [#]_
----------------------------------------------------

.. container:: foundations

    CVSS 4.0 stellt einen Rahmen bereit für die Beschreibung und Bewertung des Schweregrads von Software-/Hardware-/Firmwareschwachstellen.

    .. container:: incremental

        Die Bewertung der Basiskennzahlen ergibt eine Punktzahl zwischen 0,0 und 10,0. Wobei 0 bedeutet, dass die Schwachstelle (bisher) harmlos ist und 10,0 bedeutet, dass die Schwachstelle sehr gravierend ist.

.. [#] `CVSS 4.0 <https://www.first.org/cvss/v4.0/specification-document>`__

.. supplemental::

    Harmlos ist im Prinzip damit gleichzusetzen, dass die Schwachstelle nicht ausgenutzt werden kann oder dass die Auswirkungen nicht weiter relevant sind.



CVSS umfasst vier Gruppen von Metriken
----------------------------------------

.. class:: incremental-list dhbw

1) Basis-Metriken (:eng:`Base Metrics`) erfassen die inhärenten Eigenschaften einer Schwachstelle, die sich nicht ändern, wenn sich die Umgebung ändert.
2) Bedrohungs-Metriken (:eng:`Threat Metric Group`) spiegelt die Merkmale einer Schwachstelle wieder, die sich im Laufe der Zeit verändern.
3) Umgebungs-Metriken (:eng:`Environmental Metric Group`) erfassen die Eigenschaften einer Schwachstelle, die sich ändern, wenn sich die Umgebung ändert.
4) Ergänzende-Metriken (:eng:`Supplemental`) liefern zusätzliche Informationen, die für die Bewertung einer Schwachstelle nützlich sein können, aber den Schweregrad nicht direkt beeinflussen.



CVSS - Basis-Metriken (:eng:`Base Metric Group`)
------------------------------------------------------------

.. grid::

    .. cell::

        **Bewertung der Ausnutzbarkeit** (:eng:`Exploitability Metrics`)

        .. class:: incremental-list impressive

        - Angriffsvektor (:eng:`Attack Vector`)
        - Angriffskomplexität (:eng:`Attack Complexity`)
        - Angriffsanforderungen (:eng:`Attack Requirements`)
        - Benötigte Privilegien (:eng:`Privileges Required`)
        - Erforderliche Benutzerinteraktion (:eng:`User Interaction`)

    .. cell:: incremental

        **Bewertung der Auswirkungen** (:eng:`Impact Metrics`)

        .. container:: incremental

            *bzgl. des betroffenen Systems* (:eng:`Vulnerable System`)

            .. class:: incremental-list impressive

            - Vertraulichkeit  (:eng:`Confidentiality Impact`)
            - Integrität (:eng:`Integrity Impact`)
            - Verfügbarkeit (:eng:`Availability Impact`)

        .. container:: incremental

            *bzgl. nachgelagerter Systeme* (:eng:`Subsequent System`)

            .. class:: incremental-list impressive

            - Vertraulichkeit (:eng:`Confidentiality Impact`)
            - Integrität (:eng:`Integrity Impact`)
            - Verfügbarkeit (:eng:`Availability Impact`)



CVSS - Bedrohungs-Metriken (:eng:`Threat Metric Group`)\ [#]_
--------------------------------------------------------------

.. container::

    .. class:: impressive

    - Reifegrad des Exploits (:eng:`Exploit Maturity`)

.. [#] Die Namen und der Gruppenzuschnitt (hier: :eng:`Temporal Metric Group`) waren unter `CVSS 3.0 <https://www.first.org/cvss/v3-0/specification-document>`__ anders.


.. supplemental::

    Gibt es bisher nur die Beschreibung der Schwachstelle oder gibt es bereits einen Proof-of-Concept (PoC) Exploit?


CVSS - Umgebungs-Metriken
---------------------------------------------------------------

.. grid::

    .. cell::

        **Angepasste Basis-Metriken** (:eng:`Modified Base Metrics`)

        - Angriffsvektor (:eng:`Attack Vector`)

          Angriffskomplexität (:eng:`Attack Complexity`)

          Angriffsanforderungen (:eng:`Attack Requirements`)

          Benötigte Privilegien (:eng:`Privileges Required`)

          Erforderliche Benutzerinteraktion (:eng:`User Interaction`)

        bzgl. des betroffenen Systems **und** auch der nachgelagerten Systeme:

        - Vertraulichkeitsverlust   (:eng:`Confidentiality Impact`)

          Integritätsverlust (:eng:`Integrity Impact`)

          Verfügbarkeitsverlust (:eng:`Availability Impact`)


    .. cell::

        - Vertraulichkeitsanforderungen (:eng:`Confidentiality Requirement`)

        - Integritätsanforderungen (:eng:`Integrity Requirement`)

        - Verfügbarkeitsanforderungen (:eng:`Availability Requirement`)



CVSS - Bewertung der Ausnutzbarkeit (:eng:`Exploitability Metrics`)
--------------------------------------------------------------------

:Attack Vector (AV): Network, Adjacent, Local, Physical

:Attack Complexity (AC): Low, High

:Attack Requirements (AT): None, Present

:Privileges Required (PR): None, Low, High

:User Interaction (UI): None, Passive, Active


.. supplemental::

    **Attack Vector**

    *Network*

    Schwachstellen, die häufig "aus der Ferne ausnutzbar" sind und als ein Angriff betrachtet werden können, der auf Protokollebene über einen oder mehrere Netzknoten hinweg (z. B. über einen oder mehrere Router) ausgenutzt werden kann.

    *Adjacent*

    Der Angriff ist auf eine logisch benachbarte Topologie beschränkt. Dies kann z. B.  bedeuten, dass ein Angriff aus demselben gemeinsamen Nahbereich (z. B. Bluetooth, NFC oder IEEE 802.11) oder logischen Netz (z. B. lokales IP-Subnetz) gestartet werden muss.

    *Local*

    Der Angreifer nutzt die Schwachstelle aus, indem er lokal auf das Zielsystem zugreift (z. B. Tastatur, Konsole) oder über eine Terminalemulation (z. B. SSH); oder der Angreifer verlässt sich auf die Interaktion des Benutzers, um die zum Ausnutzen der Schwachstelle erforderlichen Aktionen durchzuführen (z. B. mithilfe von Social-Engineering-Techniken, um einen legitimen Benutzer zum Öffnen eines bösartigen Dokuments zu verleiten).

    *Physical*

    Der Angreifer muss physisch Zugriff auf das Zielsystem haben, um die Schwachstelle auszunutzen.

    **Attack Complexity**

    Wie aufwendig ist es explizite Schutzmaßnahmen ((K)ASLR, Stack Canaries, ...) zu umgehen. Wie wahrscheinlich ist es, dass ein Angriff erfolgreich ist. Im Falle von :eng:`Race Conditions` können ggf. sehr viele Ausführungen notwendig sein bevor die Race Condition erfüllt ist.

    **Attack Requirements**

    Welcher Vorbedingungen (unabhängig von den expliziten Sicherungsmaßnahmen) müssen erfüllt sein, damit die Schwachstelle ausgenutzt werden kann. (z. B. der Nutzer muss sich an seinem Smartphone mindestens einmal seit dem Boot angemeldet haben (*After-First-Use* vs. *Before-First-Use*.))

    **Privileges Required**

    Welche Privilegien muss der Angreifer mindestens haben, um die Schwachstelle auszunutzen (Sind Adminstratorrechte erforderlich oder reichen normale Benutzerrechte).

    **User Interaction**

    Passiv bedeutet hier, dass der Nutzer unfreiwillig die Schwachstelle ausnutzt ohne bewusst Schutzmechanismen zu unterlaufen. Aktiv bedeutet, dass der Nutzer aktiv Interaktionen unternimmt, um die Schutzmechanismen des Systems auszuhebeln (z. B. durch das Installieren einer nicht-signierten Anwendung aus dem Internet).



CVSS - Bewertung der Auswirkung auf das betroffene System/Vulnerable System Impact Metrics
--------------------------------------------------------------------------------------------

:Confidentiality Impact (C): None, Low, High
:Integrity Impact (I): None, Low, High
:Availability Impact (A): None, Low, High



CVSS - Bewertung der Auswirkung auf das nachgelagerte System/Vulnerable System Impact Metrics
-----------------------------------------------------------------------------------------------

:Confidentiality Impact (C): None, Low, High
:Integrity Impact (I): None, Low, High
:Availability Impact (A): None, Low, High



.. class:: exercises transition-move-left

Übung: Schwachstellen und Ihre Bewertung (1)
---------------------------------------------------------------
.. exercise::

    Ihnen liegt eine externe Festplatte vor, die Hardwareverschlüsselung unterstützt. D. h. wenn diese Festplatte an einen Computer angeschlossen wird, dann muss ein Passwort eingegeben werden, bevor auf die Daten zugegriffen werden kann. Dieses entsperren der Festplatte geschieht mit Hilfe eines speziellen Programms, dass ggf. vorher installiert werden muss. Die Festplatte ist mit AES-256-XTX verschlüsselt.

    Das Clientprogramm hasht erst das Passwort clientseitig, bevor es den Hash an den Controller der Festplatte überträgt. Die Firmware des Controllers validiert das Passwort in dem es den gesendeten Hash direkt mit dem bei der Einrichtung übermittelten Hash vergleicht; d. h. es finden keine weiteren sicherheitsrelevanten Operationen außer dem direkten Vergleich statt. Zum Entsperren der Festplatte ist es demzufolge ausreichend, den Hash aus der Hardware auszulesen und diesen an den Controller zu senden, um die Festplatte zu entsperren. Danach kann auf die Daten frei zugegriffen werden.

    1. Ermitteln Sie den `CVSS 4.0 Score <https://www.first.org/cvss/v4-0/>`__ für diese Schwachstelle. (`CVSS Rechner <https://www.first.org/cvss/calculator/4.0>`__)
    2. Welche Anwendungsfälle sind für diese Schwachstelle denkbar?

    .. solution::
        :pwd: IT Forensik

        1. Ein Lösungsvorschlag wäre:

           CVSS:4.0/AV:P/AC:H/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N
           CVSS v4.0 Score: 5.3 / Medium
        2. Die Schwachstelle könnte im Rahmen der IT Forensik ausgenutzt werden.



.. class:: exercises transition-move-left

Übung: Schwachstellen und Ihre Bewertung (2)
---------------------------------------------------------------

.. exercise::

    Durch die Analyse der Firmware eines Baseband-Prozessors - und entsprechende nachfolgende Labortests - haben Sie folgende Erkenntnisse erhalten: Wenn es Ihnen gelingt ein speziell manipuliertes Paket zu senden - welches außerhalb der Spezifikation liegt - dann kommt es zu einem Buffer-Overflow. Mit Hilfe dieses Buffer-Overflows ist es dann möglich die Firmware des Baseband-Prozessors zum Absturz zu bringen, welches daraufhin direkt selbständig neu startet. Aufgrund des Neustarts muss der Nutzer dann jedoch seine SIM-Pin neu eingeben, um sich wieder gegenüber dem Mobilfunknetz zu authentifizieren.

    Weitere Untersuchungen haben ergeben, dass es nicht möglich ist den Buffer-Overflow weitergehend auszunutzen, um zum Beispiel Daten des Smartphones auszulesen. Die Validierung der Kommunikation, die bei der Kommunikation des Baseband-Prozessors mit dem Hauptprozessor stattfindet, fängt Fehlerzustände effektiv ab.

    1. Ermitteln Sie den `CVSS 4.0 Score <https://www.first.org/cvss/v4-0/>`__ für diese Schwachstelle. (`CVSS Rechner <https://www.first.org/cvss/calculator/4.0>`__)
    2. Welche Anwendungsfälle sind für diese Schwachstelle denkbar?

    .. solution::
        :pwd: Baseband Schwachstelle


        1. CVSS:4.0/AV:A/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/E:A
           CVSS v4.0 Score: 5.3 / Medium ⊕

           Achtung: nicht alle Kriterien sind immer eindeutig zu bewerten.
           Insbesondere ist hier auch denkbar bei der *Exploit Maturity* auf *POC* zu gehen. In diesem Fall wäre der Wert nur noch 2.1.

        2. Die Schwachstelle könnte insbesondere zum gezielten Stören der Mobilfunkverbindung genutzt werden (*availability*).


.. supplemental::

    .. rubric:: Baseband-Prozessoren

    Dieser Chip Ihres Smartphones ist für die drahtlose Kommunikation zuständig. Als solcher hat der Baseband-Prozessor ein eigenes Betriebssystem; d. h. eine eigene Firmware. Diese wird typischerweise vom Hersteller des Baseband-Prozessors entwickelt. Die Kommunikation zwischen dem Baseband-Prozessor und dem Hauptprozessor erfolgt über eine wohl definierte, minimal gehaltene Schnittstelle, um die Auswirkungen von Sicherheitsproblemen ggf. eindämmen zu können.



.. class:: new-section transition-fade

Common Vulnerabilities and Exposures (`CVE <https://cve.org/>`__)
--------------------------------------------------------------------


Zweck von CVEs
------------------

.. class:: incremental-list

- Schwachstellen eindeutig identifizieren und bestimmten Versionen eines Codes (z. B. Software und gemeinsam genutzte Bibliotheken) mit diesen Schwachstellen verknüpfen.
- Kommunikationsgrundlage bilden, damit mehrere Parteien über eine eindeutig identifizierte Sicherheitslücke diskutieren können. `National Vulnerabilities Database - NIST <https://nvd.nist.gov>`__




1.  Jan. 2024 - zuletzt bewertete CVEs
-------------------------------------------------------------

.. container::

    .. die folgende Liste wurde per Copy-and-Paste des HTML Code von der NIST Webseite erzeugt:

    .. raw:: html

        <ul>
            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20672" id="cveDetailAnchor-0">CVE-2024-20672</a></strong>  - .NET Denial of Service Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-0">
                        <span id="cvss3-link-0"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20672&amp;vector=AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-0" aria-label="V3 score for CVE-2024-20672">7.5 HIGH</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20666" id="cveDetailAnchor-1">CVE-2024-20666</a></strong>  - BitLocker Security Feature Bypass Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-1">
                        <span id="cvss3-link-1"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20666&amp;vector=AV:P/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-warning" data-testid="vuln-cvss3-link-1" aria-label="V3 score for CVE-2024-20666">6.6 MEDIUM</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20680" id="cveDetailAnchor-2">CVE-2024-20680</a></strong>  - Windows Message Queuing Client (MSMQC) Information Disclosure
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-2">
                        <span id="cvss3-link-2"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20680&amp;vector=AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-warning" data-testid="vuln-cvss3-link-2" aria-label="V3 score for CVE-2024-20680">6.5 MEDIUM</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20676" id="cveDetailAnchor-3">CVE-2024-20676</a></strong>  - Azure Storage Mover Remote Code Execution Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-3">
                        <span id="cvss3-link-3"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20676&amp;vector=AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-3" aria-label="V3 score for CVE-2024-20676">8.0 HIGH</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20674" id="cveDetailAnchor-4">CVE-2024-20674</a></strong>  - Windows Kerberos Security Feature Bypass Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-4">

                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20682" id="cveDetailAnchor-5">CVE-2024-20682</a></strong>  - Windows Cryptographic Services Remote Code Execution Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-5">
                        <span id="cvss3-link-5"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20682&amp;vector=AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-5" aria-label="V3 score for CVE-2024-20682">7.8 HIGH</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20683" id="cveDetailAnchor-6">CVE-2024-20683</a></strong>  - Win32k Elevation of Privilege Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-6">
                        <span id="cvss3-link-6"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20683&amp;vector=AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-6" aria-label="V3 score for CVE-2024-20683">7.8 HIGH</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20681" id="cveDetailAnchor-7">CVE-2024-20681</a></strong>  - Windows Subsystem for Linux Elevation of Privilege Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-7">
                        <span id="cvss3-link-7"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20681&amp;vector=AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-7" aria-label="V3 score for CVE-2024-20681">7.8 HIGH</a><br>
                        </span>
                    </p>
                </div>
            </li>

            <li> ... </li>
        </ul>




.. class:: smaller

Beschreibung eines `CVEs <https://github.com/CVEProject/cvelistV5>`__
----------------------------------------------------------------------

Jeder CVE ist mit Hilfe eines wohldefinierten JSON-Dokuments beschrieben.

Gekürztes Beispiel:

.. code:: json

    { "dataVersion": "5.0",
      "cveMetadata": {
          "cveId": "CVE-2023-51034",
          "assignerOrgId": "8254265b-2729-46b6-b9e3-3dfca2d5bfca",
          "assignerShortName": "mitre",
          "datePublished": "2023-12-22T00:00:00"
      },
      "containers": { "cna": { ...,
            "descriptions": [ {
               "value": "TOTOlink [...] vulnerable to command execution [...]"
            } ], ...,
            "references": [{
               "url": "815yang.github.io/[...]totolink_UploadFirmwareFile/"
              } ], ...
    } } }




National Vulnerability Database (`NVD <https://nvd.nist.gov/>`__)\ [#]_
-------------------------------------------------------------------------

.. class:: incremental-list

- Auflistung aller CVEs und deren Bewertung
- Alle Schwachstellen in der NVD sind mit einer CVE-Kennung versehen
- Die NVD ist ein Produkt der NIST Computer Security Division, Information Technology Laboratory
- Verlinkt häufig weiterführend Seiten, die Lösungshinweise und Tools bereitstellen, um die Schwachstelle zu beheben
- Verweist auf entsprechende Schwachstellen gemäß `CWEs <https://cwe.mitre.org/>`__
- Verlinkt gelegentlich *PoC* Exploits (:eng:`Proof-of-Concept Exploits`)

.. [#] Die NIS 2 Richtlinie der EU sieht auch den Aufbau einer europäischen Schwachstellen-Datenbank vor. Aktuell ist die NVD die zentrale Anlaufstelle bzgl. Schwachstellen.



Common Weakness Enumeration (`CWE <https://cwe.mitre.org/>`__)
----------------------------------------------------------------

- eine kollaborativ entwickelte, vollständig durchsuchbare, kategorisierte Liste von Typen von Software- und Hardware-Schwachstellen und deren Beschreibung, dient als:

  .. class:: incremental-list

  - gemeinsame Sprache,
  - Messlatte für Sicherheitstools,
  - als Grundlage für die Identifizierung von Schwachstellen sowie für Maßnahmen zur Abschwächung und Prävention.




CWE - Schwachstellenkatalog `TOP 25 in 2023 <https://cwe.mitre.org/top25/archive/2023/2023_top25_list.html#tableView>`__
--------------------------------------------------------------------------------------------------------------------------------------

.. story::

    .. csv-table::
        :class: highlight-line-on-hover incremental-table-rows
        :header: Rank , ID , Name, Rank Change vs. 2022
        :widths: 7, 12, 63, 18

        1 , CWE-787 , Out-of-bounds Write  , 0
        2 , CWE-79 , Improper Neutralization of Input During Web Page Generation ("*Cross-site Scripting*") , 0
        3 , CWE-89 , Improper Neutralization of Special Elements used in an SQL Command ("*SQL Injection*"") , 0
        4 , CWE-416 , Use After Free , +3
        5 , CWE-78 , Improper Neutralization of Special Elements used in an OS Command ("*OS Command Injection*") , +1
        6 , CWE-20 , Improper Input Validation , -2
        7 , CWE-125 , Out-of-bounds Read , -2
        8 , CWE-22 , Improper Limitation of a Pathname to a Restricted Directory ("*Path Traversal*") , 0
        9 , CWE-352 , Cross-Site Request Forgery (CSRF) , 0
        10 , CWE-434 , Unrestricted Upload of File with Dangerous Type , 0
        11 , CWE-862 , Missing Authorization ,  +5
        12 , CWE-476 , NULL Pointer Dereference , -1
        13 , CWE-287 , Improper Authentication , +1
        14 , CWE-190 , Integer Overflow or Wraparound , -1
        15 , CWE-502 , Deserialization of Untrusted Data , -3
        16 , CWE-77 , Improper Neutralization of Special Elements used in a Command ("*Command Injection*") , +1
        17 , CWE-119 , Improper Restriction of Operations within the Bounds of a Memory Buffer , +2
        18 , CWE-798 , Use of Hard-coded Credentials , -3
        19 , CWE-918 , Server-Side Request Forgery (SSRF) , +2
        20 , CWE-306 , Missing Authentication for Critical Function , -2
        21 , CWE-362 , Concurrent Execution using Shared Resource with Improper Synchronization ("*Race Condition*") , +1
        22 , CWE-269 , Improper Privilege Management , +7
        23 , CWE-94 , Improper Control of Generation of Code ("*Code Injection*") , +2
        24 , CWE-863 , Incorrect Authorization ,  +4
        25 , CWE-276 , Incorrect Default Permissions , -5

.. supplemental::

    Request Forgery = :ger:`Anfragefälschung`

    .. epigraph::

        **Fest codierte Cloud-Zugangsdaten in populären Apps entdeckt**

        Betroffen sind mehrere Apps mit teils Millionen von Downloads. Den Entdeckern zufolge gefährdet dies nicht nur Backend-Dienste, sondern auch Nutzerdaten.

        Sicherheitsforscher von Symantec haben Anwendungen aus dem Google Play Store und dem Apple App Store untersucht und dabei festgestellt, dass mehrere Apps mit teils Millionen von Downloads fest codierte und unverschlüsselte Anmeldedaten für verschiedene Clouddienste enthalten. Entdeckt wurden sowohl Schlüssel für den Zugang zu AWS-Ressourcen als auch solche für Microsoft Azure. [...]

        -- 23.10.2024 `Golem.de <https://www.golem.de/news/android-und-ios-fest-codierte-cloud-zugangsdaten-in-populaeren-apps-entdeckt-2410-190106.html>`__




CVE-2023-50712 - *XSS Schwachstelle*\ [#]_
-----------------------------------------------------

.. epigraph::

   Iris is a web collaborative platform aiming to help incident responders sharing technical details during investigations. A stored Cross-Site Scripting (XSS) vulnerability has been identified in iris-web, affecting multiple locations in versions prior to v2.3.7. The vulnerability may allow an attacker to inject malicious scripts into the application, which could then be executed when a user visits the affected locations. This could lead to unauthorized access, data theft, or other related malicious activities. An attacker needs to be authenticated on the application to exploit this vulnerability. The issue is fixed in version v2.3.7 of iris-web. No known workarounds are available.

   -- Published: December 22, 2023


:Bewertung: CVSS V3.1: 5.4 MEDIUM

.. [#] :eng:`Cross-Site Scripting` (XSS) wird im nächsten Kapitel behandelt.



CVE-2023-51034 - *Arbitrary Code Execution*
----------------------------------------------------------------------

.. epigraph::

   TOTOlink EX1200L V9.3.5u.6146_B20201023 is vulnerable to arbitrary command execution via the cstecgi.cgi UploadFirmwareFile interface.

   -- Published: December 22, 2023; Last modified: January 2, 2024

.. container::

    :Bewertung: CVSS V3.1: 9.8 Critical
    :PoC Exploit: `815yang.github.io <https://815yang.github.io/2023/12/12/ex1200l/totolink_ex1200L_UploadFirmwareFile/>`__
    :Weakness Enumeration: CWE-434 Unrestricted Upload of File with Dangerous Type

.. supplemental::

    Bei TOTOlink EX1200L handelt es sich um einen Wifi Range Expander.

    PoC ≘ Proof-of-Concept



CWE-434 Unrestricted Upload of File with Dangerous Type
--------------------------------------------------------

.. epigraph::

    .. class:: columns incremental-list

    - Beschreibung

      Das Produkt ermöglicht es dem Angreifer, Dateien gefährlicher Typen hochzuladen oder zu übertragen, die in der Produktumgebung automatisch verarbeitet werden können.

    - Art der Einführung

      Diese Schwäche wird durch das Fehlen einer Sicherheitstaktik während der Architektur- und Entwurfsphase verursacht.

    - Scope

      Willkürliche Codeausführung ist möglich, wenn eine hochgeladene Datei vom Empfänger als Code interpretiert und ausgeführt wird. [...] Somit ist ggf. die Integrität, Vertraulichkeit und Verfügbarkeit betroffen.

    -- `Mitre.org <https://cwe.mitre.org/data/definitions/434.html>`__ (2023; übersetzt mit DeepL)



CVE-2023-51034 - PoC (gekürzt)
-------------------------------------------------

.. grid::

    .. cell::

        .. rubric:: Initiale Anfrage

        .. code:: http
            :number-lines:

            POST /cgi-bin/cstecgi.cgi HTTP/1.1
            [...]
            {
                "FileName":
                    ";ls../>/www/yf.txt;",
                "topicurl":
                    "UploadFirmwareFile"
            }

    .. cell::

        .. rubric:: Abfrage der Datei (hier: :code:`yf.txt`)

        .. code:: http
            :number-lines:

            GET /yf.txt HTTP/1.1
            [...]
            Connection: close

        Das Ergebnis ist eine Datei mit der Auflistung der Dateien im Verzeichnis (``..``).




CVE-2023-51034 - zugrundeliegende Schwachstelle
-------------------------------------------------

.. code:: C
    :number-lines:

    Var = (const char *)websGetVar(a1, "FileName", &byte_42FE28);
    v3 = (const char *)websGetVar(a1, "FullName", &byte_42FE28);
    v4 = (const char *)websGetVar(a1, "ContentLength", &word_42DD4C);
    v5 = websGetVar(a1, "flags", &word_42DD4C);
    v6 = atoi(v5);
    Object = cJSON_CreateObject();
    v8 = fopen("/dev/console", "a");
    v9 = v8;
    if ( v8 )
    {
        fprintf(v8, "[%s:%d] FileName=%s,FullName=%s,ContentLength=%s\n",
                    "UploadFirmwareFile", 751, Var, v3, v4);
        fclose(v9);
    }
    v10 = strtol(v4, 0, 10) + 1;
    strcpy(v52, "/tmp/myImage.img");
    doSystem("mv %s %s", Var, v52);

.. supplemental::

    Die Lücke ist auf die folgenden Zeilen zurückzuführen:

    .. code:: c
        :number-lines:

        Var = (const char *)websGetVar(a1, “FileName”, &byte_42FE28);
        ...
        doSystem(“mv %s %s”, Var, v52);

    Der Aufruf von :code:`doSystem` ermöglicht die Ausführung von beliebigem Code. Der Angreifer kann den Wert von :code:`Var` so manipulieren, dass er quasi beliebigen Code ausführen kann.



Ausgenutzte Schwachstellen
---------------------------

Der `Known Exploited Vulnerabilities (KEV) Katalog der CISA <https://www.cisa.gov/known-exploited-vulnerabilities-catalog>`__ umfasst Produkte deren Schwachstellen ausgenutzt wurden oder aktiv ausgenutzt werden.

.. class:: incremental-list list-with-sublists

- Kriterien für die Aufnahme in den KEV Katalog:

  1. Eine CVE-Id liegt vor.
  2. Die Schwachstelle wird aktiv ausgenutzt (:eng:`Active Exploitation`) (ggf. reicht es jedoch wenn „nur“ ein *Honeypot* aktiv angegriffen wurde) - ein PoC reicht nicht aus.
  3. Eine Handlungsempfehlung liegt vor (z. B. Patch, Workaround oder vollständige Abschaltung).
- Firmen sollten die KEV *Schwachstellen priorisieren*, um die Wahrscheinlichkeit eines erfolgreichen Angriffs zu verringern.


.. supplemental::

    CISA = *Cybersecurity and Infrastructure Security Agency* (oder *America's Cyber Defense Agency*)

    Ausgewählte Amerikanische Behörden sind sogar verpflichtet innerhalb vorgegebener Zeiträume zu reagieren.



.. class:: vertical-title tiny

Erzwungene Außerbetriebnahme von Produkten
------------------------------------------------------------

.. image:: images/cisa-forced-take-down.png
    :width: 70%
    :class: picture
    :align: center



2023 CWE Top 10 KEV Weaknesses
-------------------------------

.. csv-table::
    :class: small highlight-line-on-hover incremental
    :header: Schwachstelle, CWE ID, # CVE Mappings in KEV, Avg. CVSS

    Use After Free, 416, 44, 8.54
    Heap-based Buffer Overflow, 122, 32, 8.79
    Out-of-bounds Write, 787, 34, 8.19
    Improper Input Validation, 20, 33, 8.27
    Improper Neutralization of Special Elements used in an OS Command ("*OS Command Injection*"), 78, 25, 9.36
    Deserialization of Untrusted Data, 502, 16, 9.06
    Server-Side Request Forgery (SSRF), 918, 16, 8.72
    Access of Resource Using Incompatible Type ("*Type Confusion*"), 843, 16, 8.61
    Improper Limitation of a Pathname to a Restricted Directory ("*Path Traversal*"), 22, 14, 8.09
    Missing Authentication for Critical Function, 306,  8, 8.86


.. class:: center-child-elements

Schwachstellen, die auf Fehler beim Speicherzugriff zurückzuführen sind, sind nicht (mehr) notwendig!
----------------------------------------------------------------------------------------------------------------------------

.. epigraph::

    **Google hails move to Rust for huge drop in memory vulnerabilities**

    [...] Memory access vulnerabilities often occur in programming languages that are not memory safe. In 2019, memory safety issues accounted for 76% of all Android vulnerabilities.

    [...] the transition to memory safe languages through the gradual use of memory safe code in new projects and developments over a five year period. The results showed that despite a gradual rise in code [still] being written in memory unsafe languages, memory safety vulnerabilities dropped significantly.

    [...] there has been a significant drop in the number of memory-related vulnerabilities, with memory safe vulnerabilities down to 24% in 2024 [...]

    -- 26. September 2024 - `Techradar.com <https://www.techradar.com/pro/google-hails-move-to-rust-for-huge-drop-in-memory-vulnerabilities>`__




Offenlegung von Sicherheitslücken nach `CISA <https://www.cisa.gov/coordinated-vulnerability-disclosure-process>`__ [#]_
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

:eng:`Coordinated Vulnerability Disclosure (CVD)`

.. class:: incremental-list

1. Sammlung von Schwachstellenmeldungen:

   - Eigene Schwachstellenanalysen
   - Überwachung öffentlicher Quellen
   - Direkte Meldungen von Herstellern, Forschern und Nutzern

2. Analyse der Schwachstellenmeldungen zusammen mit den Herstellern, um die Sicherheitsauswirkungen zu verstehen.
3. Entwicklung von Strategien zur Eindämmung der Schwachstellen; insbesondere Entwicklung von notwendigen Patches.
4. Anwendung der Strategien zur Eindämmung der Schwachstellen in Zusammenarbeit mit dem Hersteller und ggf. betroffenen Nutzern.
5. Veröffentlichung der Schwachstellenmeldung in Abstimmung mit der Quelle des Schwachstellenberichts und dem Hersteller.

.. supplemental::

    **CISA** (America's Cybersecurity and Infrastructure Security Agency/Cyber Defense Agency).

.. [#] Das BSI verfährt ähnlich; `tut sich aber sehr schwer <https://www.heise.de/news/Trojaner-Wie-die-Ampel-beim-Schwachstellenmanagement-die-Kurve-kriegen-will-9670572.html>`__.



Zeitlicher Rahmen für die Offenlegung von Sicherheitslücken
--------------------------------------------------------------

Der Zeitrahmen für die Offenlegung von Sicherheitslücken wird durch folgende Faktoren bestimmt:

.. class:: incremental-list

- Aktive Ausnutzung der Schwachstelle
- besonders kritische Schwachstellen
- Auswirkungen auf Standards
- bereits öffentlich bekannt (zum Beispiel durch einen „naïven“` Forscher)
- Auswirkungen auf die kritische Infrastruktur, öffentliche Gesundheit und Sicherheit
- die Verfügbarkeit von effektiven Eindämmungsmaßnahmen
- das Verhalten des Herstellers und die Möglichkeit der Entwicklung eines Patches
- Schätzung des Herstellers wie lange es dauert einen Patch zu entwickeln, zu testen und auszurollen.



Welche neuen Schwachstellen werden in absehbarer Zeit ausgenutzt?
---------------------------------------------------------------------

.. observation::

    Am 1. Oktober 2023 hat die NVD 139.473 CVEs veröffentlicht. In den folgenden 30 Tagen wurden 3.852 CVEs beobachtet, die ausgenutzt (:eng:`exploited`) wurden.

    Ca. 5-6% aller Schwachstellen werden „irgendwann“ ausgenutzt. [#]_

.. question::
    :class: incremental

    Wie stelle ich sicher, dass ich meine Bemühungen zum Beseitigen der Schwachstellen auf diejenigen konzentriere, die am wahrscheinlichsten zeitnahe ausgenutzt werden?

.. [#] Fortinet, `Threat Landscape Report Q2 2018 <https://www.fortinet.com/content/dam/fortinet/assets/threat-reports/q2-2018-threat-landscape-report.pdf>`__



Nutzung des CVSS als Grundlage für die Schätzung?
----------------------------------------------------------------------

Annahme: Schwachstellen mit einem CVSS Score :math:`\geq` 7 (d. h. mit einer Bewertung von Hoch oder kritisch) werden ausgenutzt.

.. class:: incremental-list

- 80.024 Schwachstellen haben einen CVSS Score :math:`\geq` 7

  **Ausgenutzt wurden: 3.166**
- 59.449 Schwachstellen haben eine CVSS :math:`<` 7

  **Ausgenutzt wurden: 686**

.. admonition:: Zusammenfassung
    :class: smaller incremental

    Die Strategie „Priorisierung von Schwachstellen mit einem bestimmten CVSS Score“ (hier :math:`\geq` 7) ist keine geeignete Strategie, da sie nicht alle relevanten  Schwachstellen erfasst (686 *False Negatives*) und - ganz insbesondere - zu viele Schwachstellen (76.858 *False Positives*) erfasst, die nicht ausgenutzt werden.



`Exploit Prediction Scoring System (EPSS) <https://www.first.org/epss/>`__
--------------------------------------------------------------------------

.. class:: incremental

- EPSS ist eine Methode zur *Bewertung der Wahrscheinlichkeit*, dass eine Schwachstelle in den nächsten 30 Tagen ausgenutzt wird.
- EPSS basiert auf der Analyse von Schwachstellen, die in den letzten 12 Monaten ausgenutzt wurden.
- EPSS nutzt KI basierend auf folgenden Informationen (Stand Jan. 2024):

  .. class:: incremental smaller

  - Hersteller
  - Alter der Schwachstelle (Tage seit der Veröffentlichung des CVEs)
  - die Beschreibung der Schwachstelle
  - betroffene CWEs
  - CVSS Bewertungen der Schwachstellen
  - Wird der CVE auf bekannten Listen diskutiert bzw. aufgelistet?
  - Gibt es öffentliche verfügbare Exploits?



Nutzung des EPSS für die Schätzung? [#]_
----------------------------------------------------------------------------

Annahme: Schwachstellen mit EPSS 10% und größer sind werden ausgenutzt werden.


.. class:: incremental

- 3.735 Schwachstellen haben ein Wahrscheinlichkeit von EPSS 10% und größer

  **Ausgenutzt wurden: 2.435**
- 135.738 Schwachstellen haben ein EPSS :math:`<` 10%

  **Ausgenutzt wurden: 1.417**

.. admonition:: Zusammenfassung
    :class: smaller incremental

    Die Strategie „Priorisierung von Schwachstellen mit einem EPSS von 10% und höher“ ist eine geeignete\ *re* Strategie, da sehr viele relevante Schwachstellen erfasst werden und - ganz insbesondere - die Anzahl der zu beachtenden Schwachstellen ganz massiv reduziert wird ohne die Gesamtqualität *zu stark* zu beeinflussen.

.. [#] `Enhancing Vulnerability Prioritization: Data-Driven Exploit Predictions with Community-Driven Insights <https://arxiv.org/abs/2302.14172>`__



.. class:: new-section transition-fade

Schwachstellenmanagement
---------------------------

`Vulnerabilities Equities Process (VEP) (USA) <https://trumpwhitehouse.archives.gov/sites/whitehouse.gov/files/images/External%20-%20Unclassified%20VEP%20Charter%20FINAL.PDF>`__ [#]_
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

.. epigraph::

    [...] Der *Vulnerability-Equity-Process (VEP)* wägt ab, ob Informationen über Schwachstellen an den Hersteller/Lieferanten weitergegeben werden sollen, in der Erwartung, dass sie gepatcht werden, oder ob die Kenntnis der Schwachstelle vorübergehend auf die US-Regierung und möglicherweise andere Partner beschränkt werden soll, damit sie für Zwecke der nationalen Sicherheit und der Strafverfolgung, wie z. B. nachrichtendienstliche Erfassung, militärische Operationen und/oder Spionageabwehr, genutzt werden können. [...]

    -- Übersetzung: DeepL

.. [#] Die rechtlichen Rahmenbedingungen bzgl. eines effektiven Schwachstellenmanagement sind in Deutschland gerade in der Diskussion. (Stand Jul. 2024); Schwachstellen, die direkt an das BSI gemeldet werden, unterliegen dem vorher diskutierten CVD.

.. supplemental::

    Insbesondere durch die föderale Struktur in Deutschland kann es ggf. dazu kommen, dass bezüglich der Handhabung von Schwachstellen unterschiedliche rechtliche Regelungen gelten werden - je nachdem ob die Behörde eine Bundes- oder Landesbehörde ist.


`Vulnerabilities Equities Process (VEP) (USA) <https://trumpwhitehouse.archives.gov/sites/whitehouse.gov/files/images/External%20-%20Unclassified%20VEP%20Charter%20FINAL.PDF>`__
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


.. epigraph::

    [...] Die Entscheidung der US-Regierung, ob eine Schwachstelle veröffentlicht oder eingeschränkt werden soll, ist nur ein Element des Prozesses zur Bewertung der Schwachstellen und ist nicht immer eine binäre Entscheidung. Andere Optionen, die in Betracht gezogen werden können, sind die Verbreitung von Informationen zur Schadensbegrenzung an bestimmte Stellen, ohne die jeweilige Schwachstelle offenzulegen, die Einschränkung der Nutzung der Schwachstelle durch die US-Regierung in irgendeiner Weise, die Information von Regierungsstellen der USA und verbündeter Staaten über die Schwachstelle [...].

    -- Übersetzung: DeepL

`Vulnerabilities Equities Process (VEP) (USA) <https://trumpwhitehouse.archives.gov/sites/whitehouse.gov/files/images/External%20-%20Unclassified%20VEP%20Charter%20FINAL.PDF>`__
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


.. epigraph::

    [...] Alle diese Entscheidungen müssen auf der Grundlage des Verständnisses der Risiken einer Verbreitung, des potenziellen Nutzens von Schwachstellen durch die Regierung sowie der Risiken und Vorteile aller dazwischen liegenden Optionen getroffen werden. [...]

    -- Übersetzung: DeepL





Schwachstellenmanagement in Deutschland - Quo Vadis?
-------------------------------------------------------------

.. epigraph::

    [...] Die Ausnutzung von Schwachstellen von IT-Systemen steht in einem hochproblematischen Spannungsverhältnis zur IT-Sicherheit und den Bürgerrechten. Der Staat wird daher keine Sicherheitslücken ankaufen oder offenhalten, sondern sich in einem Schwachstellenmanagement unter Federführung eines unabhängigeren Bundesamtes für Sicherheit in der Informationstechnik immer um die schnellstmögliche Schließung bemühen.[...]

    -- KOALITIONSVERTRAG 2021—2025 (SPD, BÜNDNIS 90/DIE GRÜNEN, FDP)


Schwachstellenmanagement und die NIS 2 Richtlinie der EU
-------------------------------------------------------------

.. container:: smaller

    **Artikel 7 - Nationale Cybersicherheitsstrategie**

    (2) Im Rahmen der nationalen Cybersicherheitsstrategie nehmen die Mitgliedstaaten insbesondere Konzepte an ...

        c) für das Vorgehen bei Schwachstellen, das die Förderung und Erleichterung der koordinierten Offenlegung von Schwachstellen nach Artikel 12 Absatz 1 umfasst;

.. container:: smaller incremental

    **Artikel 12 - Koordinierte Offenlegung von Schwachstellen und eine europäische Schwachstellendatenbank**

    (1)   Jeder Mitgliedstaat benennt [einen] Koordinator für die Zwecke einer koordinierten Offenlegung von Schwachstellen. [Der Koordinator] fungiert als vertrauenswürdiger Vermittler und erleichtert erforderlichenfalls die Interaktion zwischen der eine Schwachstelle meldenden natürlichen oder juristischen Person und dem Hersteller oder Anbieter der potenziell gefährdeten IKT-Produkte oder IKT-Dienste auf Ersuchen einer der beiden Seiten.


.. class:: integrated-exercise transition-move-left

CVEs - Übung
---------------------------------------------------------------

.. exercise::

   1. Finden Sie Schwachstellen, die macOS Sonoma betreffen.

   2. Finden Sie heraus um was es bei CVE-2020-20095 geht.

   .. solution::
      :pwd: Die Schwachstellen

      1. Auf https://nvd.nist.gov/search "macOS Sonoma" eingeben:

         https://nvd.nist.gov/vuln/search/results?form_type=Basic&results_type=overview&query=macOS+Sonoma&search_type=all&isCpeNameSearch=false

      2. Es handelt sich um eine URI Spoofing Attacke bei der Nutzer dazu verleitet werden können, auf einen scheinbar harmlosen Link zu klicken, der sie auf eine bösartige Webseite umleitet.

        Proof of Concept (PoC):  https://github.com/zadewg/RIUS


.. class:: integrated-exercise transition-scale

Schwachstellenmanagement - Übung
-------------------------------------------------------------

.. container:: smaller

    Teilen Sie sich in drei Gruppen auf und bereiten Sie jeweils ein kurzes Statement (zwischen 1,5 und 3 Minuten) vor - gemäß Ihrer Gruppenzuteilung\ [#]_. Bereiten Sie sich auch darauf vor, Ihr Statement zu verteidigen bzw. die anderen Gruppen zu kritisieren.

    Sie haben 15 Minuten Zeit. Danach werden wir die Statements präsentiert und verteidigt.

.. class:: columns far-smaller

- Schwachstellen schließen

  Jede Schwachstelle ist ein Risiko und sollte sofort geschlossen werden.
- Schwachstellen begrenzt nutzen

  Eine begrenzte Nutzung von Schwachstellen ist für die nationale Sicherheit notwendig; eine Befeuerung des Markets sollte aber nicht erfolgen.

- Schwachstellen zurückhalten

  Für Zwecke der nationalen Sicherheit sollen Schwachstellen zurückgehalten und ggf. auch gekauft werden.



.. [#] Für diese Aufgabe sollen Sie sich in die entsprechende Rolle versetzen und Argumente gemäß Ihrer Rolle finden; Ihre (aktuelle) persönliche Meinung ist hierbei nicht relevant.
