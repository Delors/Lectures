.. meta:: 
    :author: Michael Eichberg
    :keywords: "TCP"
    :description lang=de: Verteilte Systeme
    :id: lecture-tcp
    :first-slide: last-viewed

.. |date| date::
.. |at| unicode:: 0x40

.. role:: incremental   
.. role:: eng
.. role:: ger
.. role:: red
.. role:: green
.. role:: the-blue
.. role:: minor
.. role:: ger-quote
.. role:: obsolete
.. role:: line-above
.. role:: huge
.. role:: xxl

.. role:: raw-html(raw)
   :format: html


Von der Bedeutung von Schwachstellen: CVSS, CVE, CVD, KEV, VEP
===============================================================

:Dozent: `Prof. Dr. Michael Eichberg <https://delors.github.io/cv/folien.rst.html>`__
:Kontakt: michael.eichberg@dhbw-mannheim.de
:Version: |date|

.. supplemental::

   :Folien: 
        
          https://delors.github.io/sec-cvss-cve-vep/folien.rst.html 
          
          https://delors.github.io/sec-cvss-cve-vep/folien.rst.html.pdf
   :Fehler auf Folien melden:
  
          https://github.com/Delors/delors.github.io/issues


Inhalt
----------------

- `Social-Engineering Angriffe`_
- `Common Vulnerability Scoring System (CVSS)`_
- `Common Vulnerabilities and Exposures (CVE)`_
- `National Vulnerability Database (NVD)`_
- `Exploit Prediction Scoring System (EPSS)`_
- `Schwachstellenmanagement`_

.. class:: new-section transition-fade

Social-Engineering Angriffe
-------------------------------------------------------------


Eigenschaften von Social-Engineering Angriffe
-------------------------------------------------------------

.. class:: incremental

- **sind häufig die Ursache für erfolgreiche Angriffe**
- stellen die größte Bedrohung für die Sicherheit von IT-Systemen dar
- es wird angenommen, dass die betroffenen Personen es in vielen Fällen nicht merken :incremental:`(Beispiel: Fake Bewerbungsgespräch)`
- mittels OSINT kann die Vorbereitung von Social-Engineering Angriffen vereinfacht werden

.. container:: supplemental

    Ein vom Angreifer bewusst eingefädeltes Bewerbungsgespräch für eine Position als Administrator könnte zum Beispiel dazu genutzt werden, um Informationen über das Zielsystem zu erhalten, die für einen Angriff nützlich sind (z. B. welche Software wird eingesetzt, wie sieht die Architektur aus, ...). In diesem Fall ist davon auszugehen, dass ein Bewerber zum Beispiel durch ein Headhunter eine gutes Angebot gemacht wird und er dann im Rahmen des Gesprächs gebeten eine Sicherheitsarchitektur darzustellen, die er einführen würde. Es ist dann davon auszugehen, dass er auf seine bisherige Erfahrung zurückgreift und diese darstellt und er somit die Architektur des Zielsystems offenlegt.


Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------

:Phishing and Spear Phishing: 

    .. container:: incremental

        *Phishing* nutzt elekr. Kommunikationswege (z. B. E-Mail, SMS, ...) um an Informationen zu gelangen. *Spear phishing* ist Phishing, bei der der Angreifer auf eine bestimmte Zielgruppe oder Person abzielt.

:Smishing: 
 
    .. container:: incremental

        Phishing mit Hilfe von SMS.

:Vishing:

    .. container:: incremental

        `Phishing mit Hilfe von Telefonanrufen <https://www.europol.europa.eu/publications-events/publications/vishing-calls>`__. :incremental:`(z. B. Anrufe von Europol)`

:Whaling:

    .. container:: incremental

        Phishing, dass sich gegen hochrangige und sehr ausgewählte Personen richtet (z. B. den CEO eines Unternehmens).


.. container:: supplemental

    **Typische Phishing E-Mail**

    .. image:: images/phishing-mail-fake-fedex.png 
        :width: 80%
        

Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------

:Pharming:

    .. container:: incremental

        Manipulation des DNS-Servers, um den Nutzer auf eine gefälschte Webseite zu leiten, um dann sensitive Informationen zu erlangen.

:Spam / Spam over Internet messaging (SPIM):


    .. container:: incremental

        Unerwünschte und nicht angeforderte E-Mail-Nachrichten oder Nachrichten in sozialen Medien bzw. Instant Messaging-Diensten.


Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------

:Dumpster Diving:

    .. container:: incremental

        Durchsuchen von :ger-quote:`Müllcontainern` nach Informationen, die für einen Angriff nützlich sein könnten.

:Shoulder Surfing:

    .. container:: incremental

        Beobachten von Personen, die sich an einem Computer anmelden, um das Passwort zu erfahren oder die sensitive Informationen auf dem Schreibtisch liegen haben.   

:Tailgating:

    .. container:: incremental

        Ein Angreifer nutzt die Zugangsberechtigung einer Person, um sich Zugang zu einem Gebäude zu verschaffen ohne das die Person dies bemerkt oder gar zustimmt. Dies kann durch Zugangsschleusen verhindert werden, die immer nur einer Person den Zugang gewähren. 



Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------


:Identity Fraud:

    .. container:: incremental

        Identitätsdiebstahl. Der Angreifer gibt sich als jemand anderes aus, um an Informationen zu gelangen oder um eine Straftat zu begehen.


:Invoice Scams:

    .. container:: incremental

        Versenden von Rechnungen, für Dienstleistungen und Produkte die man nicht gekauft hat. :incremental:`(z. B. Rechnungen für Postzustellung.)`


Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------


:Credential harvesting:

    .. container:: incremental

        Sammlung von Zugangsdaten, die durch Sicherheitslücken in Systemen oder durch Phishing erlangt wurden. 


:Hoax:

    .. container:: incremental

        Eine bewusste Falschmeldung, die Menschen dazu veranlasst etwas falsches zu glauben. 


:Impersonation or Pretexting: 

    .. container:: incremental

        Vorgabe einer falschen Identität (z. B. als Mitarbeiter des IT-Supports) d. h. der Angreifer gibt sich persönlich als jemand anderes aus, um an Informationen zu gelangen und nutzt dafür keine elektronischen Hilfsmittel.

.. container:: supplemental

    Ein Beispiel eines nicht-harmlosen Streichs (Hoax) ist die Falschmeldung vom 1. April 2003, dass Bill Gates gestorben sei. Diese Falschmeldung wurde von vielen Menschen geglaubt und hatte relevanten Einfluss auf den Aktienmarkt.

    In der Anfangszeit von Github und Bitbucket wurden häufig Zugangsdaten und Zertifikate in öffentlichen Repositories gefunden, da die Nutzer diese im Quellcode hinterlegt hatten oder sogar als Ressourcen direkt eingebunden hatten.


Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------

:Eavesdropping:

    .. container:: incremental
    
        Abhören von Gesprächen, um an relevante Informationen zu gelangen.   


:Eliciting Information:

    .. container:: incremental

        Der Angreifer versucht durch geschicktes Fragen an Informationen zu gelangen, die für einen Angriff nützlich sein könnten.



Ausgewählte Social-Engineering Angriffe bzw. Terminologie
-------------------------------------------------------------


:Baiting (`Ködern`:ger:):

    .. container:: incremental

        Der Angreifer bietet etwas an, um an Informationen zu gelangen. (z. B. ein USB-Stick mit einem Virus, der sich beim Einstecken des USB-Sticks auf dem Rechner installiert.)


:Watering Hole Attack:

    .. container:: incremental

        Der Angreifer infiziert eine Webseite, die von der Zielgruppe häufig besucht wird, um dann die Besucher der Webseite anzugreifen.

:Typo Squatting:

    .. container:: incremental
            
            Ausnutzen von Tippfehlern durch das Registrieren einer Domain, die der Domain eines Zielunternehmens ähnelt, um dann Besucher der Webseite auf eine gefälschte Webseite zu leiten. (z. B. `www.gooogle.com`)


:ger-quote:`Motivationstechniken` von Social-Engineers 
-------------------------------------------------------------

.. class:: incremental

- Autorität: Der Angreifer gibt sich z. B. als Mitarbeiter des IT-Supports aus.
- Einschüchterung (:eng:`Intimidation`)
- Dringlichkeit
- Konsens (*"Alle machen das so."*)
- Knappheit (*"Nur noch Heute im Angebot."*)
- Vertrautheit 
- Vertrauen


.. class:: new-section transition-fade

Common Vulnerability Scoring System (CVSS)
--------------------------------------------


.. class:: center-child-elements

\
---------

.. container:: foundations

    Das `Common Vulnerability Scoring System (CVSS 4.0) <https://www.first.org/cvss/v4.0/specification-document>`__ stellt einen Rahmen bereit für die Beschreibung und Bewertung des Schweregrads von Software-/Hardware-/Firmwareschwachstellen.

    Die Bewertung der Basiskennzahlen ergibt eine Punktzahl zwischen 0,0 und 10,0. Wobei 0 bedeuted, dass die Schwachstelle (bisher) harmlos ist und 10,0 bedeutet, dass die Schwachstelle sehr gravierend ist.


CVSS umfasst vier Gruppen von Metriken
----------------------------------------

.. class:: incremental

1) Basis-Metriken (:eng:`Base Metrics`) erfassen die inhärenten Eigenschaften einer Schwachstelle, die sich nicht ändern, wenn sich die Umgebung ändert.
2) Bedrohungs-Metriken (:eng:`Threat Metric Group`) spiegelt die Merkmale einer Schwachstelle wieder, die sich im Laufe der Zeit verändern.
3) Umgebungs-Metriken (:eng:`Environmental Metric Group`) erfassen die Eigenschaften einer Schwachstelle, die sich ändern, wenn sich die Umgebung ändert.
4) Ergänzende-Metriken (:eng:`Supplemental`) liefern zusätzliche Informationen, die für die Bewertung einer Schwachstelle nützlich sein können, aber den Schweregrad nicht direkt beeinflussen.


CVSS - Basis-Metriken (:eng:`Base Metric Group`)
------------------------------------------------------------

.. container:: two-columns scriptsize

    .. container:: column

        **Bewertung der Ausnutzbarkeit** (:eng:`Exploitability Metrics`)

        .. class:: incremental impressive

        - Angriffsvektor (:eng:`Attack Vector`)
        - Angriffskomplexität (:eng:`Attack Complexity`)
        - Angriffsanforderungen (:eng:`Attack Requirements`)
        - Benötigte Privilegien (:eng:`Privileges Required`)
        - Erforderliche Benutzerinteraktion (:eng:`User Interaction`)

    .. container:: column incremental

        **Bewertung der Auswirkungen** (:eng:`Impact Metrics`)

        .. container:: incremental

            *bzgl. des betroffenen Systems* (:eng:`Vulnerable System`)

            .. class:: incremental impressive

            - Vertraulichkeit  (:eng:`Confidentiality Impact`)
            - Integrität (:eng:`Integrity Impact`)
            - Verfügbarkeit (:eng:`Availability Impact`)
        
        .. container:: incremental 

            *bzgl. nachgelagerter Systeme* (:eng:`Subsequent System`)

            .. class:: incremental impressive
                
            - Vertraulichkeit (:eng:`Confidentiality Impact`)
            - Integrität (:eng:`Integrity Impact`)
            - Verfügbarkeit (:eng:`Availability Impact`)



CVSS - Bedrohungs-Metriken (:eng:`Threat Metric Group`) [#]_
--------------------------------------------------------------

.. container::  scriptsize
    
        .. class:: impressive

        - Reifegrad des Exploits (:eng:`Exploit Maturity`)
        
.. [#] Die Namen und der Gruppenzuschnitt (hier: :eng:`Temporal Metric Group`) waren unter CVSS 3.0 anders: `CVSS 3.0 <https://www.first.org/cvss/v3-0/specification-document>`__


.. container:: supplemental

    Gibt es bisher nur die Beschreibung der Schwachstelle oder gibt es bereits einen Proof-of-Concept (PoC) Exploit?


CVSS - Umgebungs-Metriken 
---------------------------------------------------------------

.. container:: scriptsize two-columns

    .. container:: column tiny

        **Angepasste Basis-Metriken** (:eng:`Modified Base Metrics`)

            .. class:: impressive

            - Angriffsvektor (:eng:`Attack Vector`)
    
              Angriffskomplexität (:eng:`Attack Complexity`)

              Angriffsanforderungen (:eng:`Attack Requirements`)

              Benötigte Privilegien (:eng:`Privileges Required`)

              Erforderliche Benutzerinteraktion (:eng:`User Interaction`)

            bzgl. des betroffenen Systems **und** auch der nachgelagerten Systeme:

            .. class:: impressive

            - Vertraulichkeitsverlust   (:eng:`Confidentiality Impact`)
            
              Integritätsverlust (:eng:`Integrity Impact`)

              Verfügbarkeitsverlust (:eng:`Availability Impact`)


    .. container:: column
    
        .. class:: impressive

            - Vertraulichkeitsanforderungen (:eng:`Confidentiality Requirement`)
            
            - Integritätsanforderungen (:eng:`Integrity Requirement`)

            - Verfügbarkeitsanforderungen (:eng:`Availability Requirement`)



CVSS - Bewertung der Ausnutzbarkeit/Exploitability Metrics
------------------------------------------------------------

:Attack Vector (AV): Network, Adjacent, Local, Physical

:Attack Complexity (AC): Low, High

:Attack Requirements (AT): None, Present

:Privileges Required (PR): None, Low, High

:User Interaction (UI): None, Passive, Active


.. container:: supplemental

    **Attack Vector**

    *Network*

    Schwachstellen, die häufig "aus der Ferne ausnutzbar" sind und als ein Angriff betrachtet werden können, der auf Protokollebene über einen oder mehrere Netzknoten hinweg (z. B. über einen oder mehrere Router) ausgenutzt werden kann.

    *Adjacent*

    Der Angriff ist auf eine logisch benachbarte Topologie beschränkt. Dies kann z. B.  bedeuten, dass ein Angriff aus demselben gemeinsamen Nahbereich (z. B. Bluetooth, NFC oder IEEE 802.11) oder logischen Netz (z. B. lokales IP-Subnetz) gestartet werden muss.

    *Local*

    Der Angreifer nutzt die Schwachstelle aus, indem er lokal auf das Zielsystem zugreift (z. B. Tastatur, Konsole) oder über eine Terminalemulation (z. B. SSH); oder der Angreifer verlässt sich auf die Interaktion des Benutzers, um die zum Ausnutzen der Schwachstelle erforderlichen Aktionen durchzuführen (z. B. mithilfe von Social-Engineering-Techniken, um einen legitimen Benutzer zum Öffnen eines bösartigen Dokuments zu verleiten).

    *Physical*

    Der Angreifer muss physisch Zugriff auf das Zielsystem haben, um die Schwachstelle auszunutzen.

    **Attack Complexity**

    Wie aufwendig ist es explizite Schutzmaßnahmen ((K)ASLR, Stack Canaries, ...) zu umgehen. Wie wahrscheinlich ist es, dass ein Angriff erfolgreich ist. Im Falle von :eng:`Race Conditions` können ggf. sehr viele Ausführungen notwendig sein bevor die Race Condition erfüllt ist.

    **Attack Requirements**

    Welcher Vorbedingungen (unabhängig von den expliziten Sicherungsmaßnahmen) müssen erfüllt sein, damit die Schwachstelle ausgenutzt werden kann. (z. B. der Nutzer muss sich an seinem Smartphone mindestens einmal seit dem Boot angemeldet haben (*After-First-Use* vs. *Before-First-Use*.))

    **Privileges Required**

    Welche Privilegien muss der Angreifer mindestens haben, um die Schwachstelle auszunutzen (Sind Adminstratorrechte erforderlich oder reichen normale Benutzerrechte).

    **User Interaction**
    
    Passiv bedeuted hier, dass der Nutzer unfreiwillig die Schwachstelle ausnutzt ohne bewusst Schutzmechanismen zu unterlaufen. Aktiv bedeuted, dass der Nutzer aktiv Interaktionen unternimmt, um die Schutzmechanismen des Systems auszuhebeln (z. B. durch das Installieren einer nicht-signierten Anwendung aus dem Internet).



CVSS - Bewertung der Auswirkung auf das betroffene System/Vulnerable System Impact Metrics
--------------------------------------------------------------------------------------------

:Confidentiality Impact (C): None, Low, High
:Integrity Impact (I): None, Low, High
:Availability Impact (A): None, Low, High



CVSS - Bewertung der Auswirkung auf das nachgelagerte System/Vulnerable System Impact Metrics
-----------------------------------------------------------------------------------------------

:Confidentiality Impact (C): None, Low, High
:Integrity Impact (I): None, Low, High
:Availability Impact (A): None, Low, High









.. class:: integrated-exercise transition-move-left smaller

Übung: Schwachstellen und Ihre Bewertung (1)
---------------------------------------------------------------
.. exercise::

    Ihnen liegt eine externe Festplatte vor, die Hardwareverschlüsselung unterstützt. d. h. wenn diese Festplatte an einen Computer angeschlossen wird, dann muss ein Passwort eingegeben werden, bevor auf die Daten zugegriffen werden kann. Dieses entsperren der Festplatte geschieht mit Hilfe eines speziellen Programms, dass ggf. vorher installiert werden muss. Die Festplatte ist mit AES-256-XTX verschlüsselt. 
    
    Das Clientprogramm hasht erst das Passwort bevor es den Hash an den Controller der Festplatte überträgt. Die Firmware des Controller validiert das Passwort in dem es den gesendeten Hash direkt mit dem bei der Einrichtung übermittelten Hash vergleicht; d. h. es finden keine weiteren sicherheitsrelevanten Operationen außer dem direkten Vergleich statt. Zum Entsperren der Festplatte ist es demzufolge ausreichend den Hash aus der Hardware auszulesen und diesen an den Controller zu senden, um diese zu entsperren. Danach kann auf die Daten frei zugegriffen werden. 

    1. Ermitteln Sie den `CVSS 4.0 Score <https://www.first.org/cvss/v4-0/>`__ für diese Schwachstelle. (`CVSS Rechner <https://www.first.org/cvss/calculator/4.0>`__)
    2. Welche Anwendungsfälle sind für diese Schwachstelle denkbar?

    .. solution::
        :pwd: IT Forensik

        1. Ein Lösungsvorschlag wäre:
        
           CVSS:4.0/AV:P/AC:H/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N
           CVSS v4.0 Score: 5.3 / Medium
        2. Die Schwachstelle könnte im Rahmen der IT Forensik ausgenutzt werden.


.. class:: integrated-exercise transition-move-left  smaller

Übung: Schwachstellen und Ihre Bewertung (2)
---------------------------------------------------------------

.. exercise:: 

    Durch die Analyse der Firmware eines Basebands haben Sie folgende Erkenntnisse erhalten: Wenn es Ihnen gelingt ein speziell manipuliertes Paket - welches außerhalb der Spezifikation liegt -  an das Baseband zu senden, dann kommt es zu einem Buffer-Overflow. Mit Hilfe dieses Buffer-Overflows ist es dann möglich das Baseband zum Absturz zu bringen, welches daraufhin direkt selbständig neu startet. Aufgrund des Neustarts muss der Nutzer dann jedoch seine SIM-Pin neu eingeben, um sich wieder gegenüber dem Mobilfunknetz zu authentifizieren. 

    Intensive weitere Untersuchungen haben ergeben, dass es nicht möglich ist den Buffer-Overflow weitergehend auszunutzen, um zum Beispiel Daten des Smartphones abzugreifen, da die Validierung der Kommunikation mit dem Hauptprozessor effektiv ist. In einem Labortest wurden die Erkenntnisse validiert. Es war möglich ein entsprechendes Paket erfolgreich an ein Baseband zu senden und dadurch ein Neustart des Basebands zu erzwingen.

    1. Ermitteln Sie den `CVSS 4.0 Score <https://www.first.org/cvss/v4-0/>`__ für diese Schwachstelle. (`CVSS Rechner <https://www.first.org/cvss/calculator/4.0>`__)
    2. Welche Anwendungsfälle sind für diese Schwachstelle denkbar?

    .. solution:: 
        :pwd: Baseband Schwachstelle
    
    
        1. CVSS:4.0/AV:A/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N
           CVSS v4.0 Score: 7.1 / High ⊕

           Achtung: nicht alle Kriterien sind immer eindeutig zu bewerten.

        2. Die Schwachstelle könnte insbesondere zum gezielten Stören der Mobilfunkverbindung genutzt werden (*availability*).
    

.. container:: supplemental 

    .. container:: black

        **Baseband**

        Der Baseband Chip Ihres Smartphones ist für die Kommunikation mit dem Mobilfunknetz zuständig. Als solcher hat das Baseband eine eigene Firmware, die von dem Hersteller des Basebands stammt. Die Kommunikation zwischen dem Baseband und dem Hauptprozessor erfolgt über eine wohl definierte, minimal gehaltene Schnittstelle, um die Auswirkungen von Sicherheitsproblemen ggf. eindämmen zu können.

 



.. class:: new-section transition-fade

Common Vulnerabilities and Exposures (`CVE <https://cve.org/>`__)
--------------------------------------------------------------------



Definition von Schwachstellen nach CVE
------------------------------------------------------------------

.. epigraph::

    "Eine Schwachstelle in der Berechnungslogik (z. B. Code), die in Software- und Hardwarekomponenten gefunden wird und die, wenn sie ausgenutzt wird, zu einer negativen Auswirkung auf die **Vertraulichkeit**, **Integrität** oder **Verfügbarkeit** führt. Die Behebung der Schwachstellen in diesem Zusammenhang umfasst in der Regel Änderungen am Code, kann aber auch Änderungen an der Spezifikation oder sogar die Ablehnung der Spezifikation (z. B. die vollständige Entfernung der betroffenen Protokolle oder Funktionen) beinhalten."

    -- https://nvd.nist.gov/vuln (Übersetzt mit DeepL)

.. container:: incremental margin-top-2em

   In der Praxis werden n-Day und 0-Day Schwachstellen unterschieden.



Zweck von CVEs
------------------

.. class:: incremental

- Schwachstellen eindeutig identifizieren und bestimmten Versionen eines Codes (z. B. Software und gemeinsam genutzte Bibliotheken) mit diesen Schwachstellen verknüpfen. 
- Kommunikationsgrundlage bilden, damit mehrere Parteien über eine eindeutig identifizierte Sicherheitslücke diskutieren können. `National Vulnerabilities Database - NIST <https://nvd.nist.gov>`__



.. class:: scriptsize

1.  Jan. 2024 - zuletzt bewertete CVEs
-------------------------------------------------------------

.. container::  incremental

    .. die folgende Liste wurde per Copy-and-Paste des HTML Code von der NIST Webseite erzeugt:

    .. raw:: html

        <ul>
            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20672" id="cveDetailAnchor-0">CVE-2024-20672</a></strong>  - .NET Denial of Service Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-0">
                        <span id="cvss3-link-0"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20672&amp;vector=AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-0" aria-label="V3 score for CVE-2024-20672">7.5 HIGH</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20666" id="cveDetailAnchor-1">CVE-2024-20666</a></strong>  - BitLocker Security Feature Bypass Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-1">
                        <span id="cvss3-link-1"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20666&amp;vector=AV:P/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-warning" data-testid="vuln-cvss3-link-1" aria-label="V3 score for CVE-2024-20666">6.6 MEDIUM</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20680" id="cveDetailAnchor-2">CVE-2024-20680</a></strong>  - Windows Message Queuing Client (MSMQC) Information Disclosure
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-2">
                        <span id="cvss3-link-2"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20680&amp;vector=AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-warning" data-testid="vuln-cvss3-link-2" aria-label="V3 score for CVE-2024-20680">6.5 MEDIUM</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20676" id="cveDetailAnchor-3">CVE-2024-20676</a></strong>  - Azure Storage Mover Remote Code Execution Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-3">
                        <span id="cvss3-link-3"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20676&amp;vector=AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-3" aria-label="V3 score for CVE-2024-20676">8.0 HIGH</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20674" id="cveDetailAnchor-4">CVE-2024-20674</a></strong>  - Windows Kerberos Security Feature Bypass Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-4">
                            
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20682" id="cveDetailAnchor-5">CVE-2024-20682</a></strong>  - Windows Cryptographic Services Remote Code Execution Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-5">
                        <span id="cvss3-link-5"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20682&amp;vector=AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-5" aria-label="V3 score for CVE-2024-20682">7.8 HIGH</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20683" id="cveDetailAnchor-6">CVE-2024-20683</a></strong>  - Win32k Elevation of Privilege Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-6">
                        <span id="cvss3-link-6"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20683&amp;vector=AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-6" aria-label="V3 score for CVE-2024-20683">7.8 HIGH</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li>
                <div class="col-lg-9">
                    <p>
                        <strong><a href="/vuln/detail/CVE-2024-20681" id="cveDetailAnchor-7">CVE-2024-20681</a></strong>  - Windows Subsystem for Linux Elevation of Privilege Vulnerability
                    </p>
                </div>
                <div class="col-lg-3">
                    <p id="severity-score-7">
                        <span id="cvss3-link-7"> <em>V3.1:</em> <a href="/vuln-metrics/cvss/v3-calculator?name=CVE-2024-20681&amp;vector=AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&amp;version=3.1&amp;source=Microsoft%20Corporation" class="label label-danger" data-testid="vuln-cvss3-link-7" aria-label="V3 score for CVE-2024-20681">7.8 HIGH</a><br>
                        </span> 
                    </p>
                </div>
            </li>

            <li> ... </li>
        </ul>




.. class:: smaller

Beschreibung eines `CVEs <https://github.com/CVEProject/cvelistV5>`__
----------------------------------------------------------------------

Jeder CVE ist mit Hilfe eines wohldefinierten JSON-Dokuments beschrieben. Gekürztes Beispiel

.. code:: json
    :class: footnotesize

    { "dataVersion": "5.0",
      "cveMetadata": {
          "cveId": "CVE-2023-51034",
          "assignerOrgId": "8254265b-2729-46b6-b9e3-3dfca2d5bfca",
          "assignerShortName": "mitre",
          "datePublished": "2023-12-22T00:00:00"
      },
      "containers": { "cna": { ...,
            "descriptions": [ {
               "value": "TOTOlink [...] vulnerable to command execution [...]"
            } ], ...,
            "references": [{
               "url": "815yang.github.io/[...]totolink_UploadFirmwareFile/"
              } ], ...
    } } }




National Vulnerability Database (`NVD <https://nvd.nist.gov/>`__)
---------------------------------------------------------------------

.. class:: incremental

- Auflistung aller CVEs und deren Bewertung
- Alle Schwachstellen in der NVD wurden sind einer CVE-Kennung versehen 
- Die NVD ist ein Produkt der NIST Computer Security Division, Information Technology Laboratory
- Verlinkt häufig weiterführend Seiten, die Lösungshinweise und Tools bereitstellen, um die Schwachstelle zu beheben;
- Verweist auf entsprechende Schwachstellen gemäß `CWEs <https://cwe.mitre.org/>`__
- Verlinkt gelegentlich *PoC* Exploits (:eng:`Proof-of-Concept Exploits`)



Common Weakness Enumeration (`CWE <https://cwe.mitre.org/>`__)
----------------------------------------------------------------

- eine kollaborativ entwickelte, vollständig durchsuchbare, kategorisierte Liste von Typen von Software- und Hardware-Schwachstellen und deren Beschreibung, dient als:
  
  .. class:: incremental

  - gemeinsame Sprache, 
  - Messlatte für Sicherheitstools,
  - als Grundlage für die Identifizierung von Schwachstellen sowie für Maßnahmen zur Abschwächung und Prävention.



CWE - Schwachstellenkatalog `TOP 8 in 2023 <https://cwe.mitre.org/top25/archive/2023/2023_top25_list.html#tableView>`__
--------------------------------------------------------------------------------------------------------------------------------------

.. csv-table::
    :class: small highlight-line-on-hover
    :header:     Rank , ID , Name, Rank Change vs. 2022
    :widths: 7, 12, 63, 18
    
    1 , CWE-787 , Out-of-bounds Write  , 0
    2 , CWE-79 , Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') , 0
    3 , CWE-89 , Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') , 0
    4 , CWE-416 , Use After Free , +3
    5 , CWE-78 , Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') , +1
    6 , CWE-20 , Improper Input Validation , -2
    7 , CWE-125 , Out-of-bounds Read , -2
    8 , CWE-22 , Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') , 0



CWE - Schwachstellenkatalog `TOP 9-16 in 2023 <https://cwe.mitre.org/top25/archive/2023/2023_top25_list.html#tableView>`__
--------------------------------------------------------------------------------------------------------------------------------------

.. csv-table::
    :class: small highlight-line-on-hover
    :header:     Rank , ID , Name, Rank Change vs. 2022
    :widths: 7, 12, 63, 18
    
    9 , CWE-352 , Cross-Site Request Forgery (CSRF) , 0
    10 , CWE-434 , Unrestricted Upload of File with Dangerous Type , 0
    11 , CWE-862 , Missing Authorization ,  +5
    12 , CWE-476 , NULL Pointer Dereference , -1
    13 , CWE-287 , Improper Authentication , +1
    14 , CWE-190 , Integer Overflow or Wraparound , -1
    15 , CWE-502 , Deserialization of Untrusted Data , -3
    16 , CWE-77 , Improper Neutralization of Special Elements used in a Command ('Command Injection') , +1

.. container:: supplemental

    Request Forgery = :ger:`Anfragefälschung`



CWE - Schwachstellenkatalog `TOP 17-25 in 2023 <https://cwe.mitre.org/top25/archive/2023/2023_top25_list.html#tableView>`__
--------------------------------------------------------------------------------------------------------------------------------------

.. csv-table::
    :class: small highlight-line-on-hover
    :header:     Rank , ID , Name, Rank Change vs. 2022
    :widths: 7, 12, 63, 18

    17 , CWE-119 , Improper Restriction of Operations within the Bounds of a Memory Buffer , +2
    18 , CWE-798 , Use of Hard-coded Credentials , -3
    19 , CWE-918 , Server-Side Request Forgery (SSRF) , +2
    20 , CWE-306 , Missing Authentication for Critical Function , -2
    21 , CWE-362 , Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') , +1
    22 , CWE-269 , Improper Privilege Management , +7
    23 , CWE-94 , Improper Control of Generation of Code ('Code Injection') , +2
    24 , CWE-863 , Incorrect Authorization ,  +4
    25 , CWE-276 , Incorrect Default Permissions , -5



Beispiel eines CVEs für eine *XSS Schwachstelle* [#]_
-----------------------------------------------------

.. epigraph:: CVE-2023-50712

   Iris is a web collaborative platform aiming to help incident responders sharing technical details during investigations. A stored Cross-Site Scripting (XSS) vulnerability has been identified in iris-web, affecting multiple locations in versions prior to v2.3.7. The vulnerability may allow an attacker to inject malicious scripts into the application, which could then be executed when a user visits the affected locations. This could lead to unauthorized access, data theft, or other related malicious activities. An attacker needs to be authenticated on the application to exploit this vulnerability. The issue is fixed in version v2.3.7 of iris-web. No known workarounds are available.

   -- Published: December 22, 2023

.. container:: footnotesize
    
    **Bewertung**: CVSS V3.1: 5.4 MEDIUM

.. [#] :eng:`Cross-Site Scripting` (XSS) wird im nächsten Kapitel behandelt.




Beispiel eines CVEs für eine *Arbitrary Code Execution Schwachstelle*
----------------------------------------------------------------------

.. epigraph:: CVE-2023-51034

   TOTOlink EX1200L V9.3.5u.6146_B20201023 is vulnerable to arbitrary command execution via the cstecgi.cgi UploadFirmwareFile interface.

   -- Published: December 22, 2023; Last modified: January 2, 2024

.. container:: footnotesize
    
    :Bewertung: CVSS V3.1: 9.8 Critical
    :PoC Exploit: https://815yang.github.io/2023/12/12/ex1200l/totolink_ex1200L_UploadFirmwareFile/
    :Weakness Enumeration: CWE-434 Unrestricted Upload of File with Dangerous Type

.. container:: supplemental

    Bei TOTOlink EX1200L handelt es sich um einen Wifi Range Expander.



.. class:: smaller

CWE-434 Unrestricted Upload of File with Dangerous Type
--------------------------------------------------------

.. class:: footnotesize

.. epigraph::
    
    Beschreibung:

        Das Produkt ermöglicht es dem Angreifer, Dateien gefährlicher Typen hochzuladen oder zu übertragen, die in der Produktumgebung automatisch verarbeitet werden können.

    Arten der Einführung:

        Diese Schwäche wird durch das Fehlen einer Sicherheitstaktik während der Architektur- und Entwurfsphase verursacht. 

    Scope: Integrität, Vertraulichkeit, Verfügbarkeit

        Willkürliche Codeausführung ist möglich, wenn eine hochgeladene Datei vom Empfänger als Code interpretiert und ausgeführt wird. [...] 

    -- https://cwe.mitre.org/data/definitions/434.html (Übersetzt mit DeepL) 



.. class:: smaller

CVE-2023-51034 - PoC (gekürzt)
-------------------------------------------------

Initiale Anfrage:

.. code:: http

    POST /cgi-bin/cstecgi.cgi HTTP/1.1
    [...]    
    {
        "FileName":";ls../>/www/yf.txt;",
        "topicurl":"UploadFirmwareFile"

    }

.. container:: incremental

    Abfrage der Datei (hier: :code:`yf.txt`):

    .. code:: http

        GET /yf.txt HTTP/1.1
        [...]
        Connection: close

    Das Ergebnis ist die Auflistung der Dateien im Verzeichnis.



.. class:: smaller

CVE-2023-51034 - zugrundeliegende Schwachstelle
-------------------------------------------------

.. code:: C
    :class: scriptsize

    Var = (const char *)websGetVar(a1, "FileName", &byte_42FE28);
    v3 = (const char *)websGetVar(a1, "FullName", &byte_42FE28);
    v4 = (const char *)websGetVar(a1, "ContentLength", &word_42DD4C);
    v5 = websGetVar(a1, "flags", &word_42DD4C);
    v6 = atoi(v5);
    Object = cJSON_CreateObject();
    v8 = fopen("/dev/console", "a");
    v9 = v8;
    if ( v8 )
    {
        fprintf(v8, "[%s:%d] FileName=%s,FullName=%s,ContentLength=%s\n", 
                    "UploadFirmwareFile", 751, Var, v3, v4);
        fclose(v9);
    }
    v10 = strtol(v4, 0, 10) + 1;
    strcpy(v52, "/tmp/myImage.img");
    doSystem("mv %s %s", Var, v52);

.. container:: supplemental

    Die Lücke ist auf die folgenden Zeilen zurückzuführen:

    .. code:: c

        Var = (const char *)websGetVar(a1, “FileName”, &byte_42FE28);
        doSystem(“mv %s %s”, Var, v52);

    Der Aufruf von :code:`doSystem` ermöglicht die Ausführung von beliebigem Code. Der Angreifer kann den Wert von :code:`Var` so manipulieren, dass er quasi beliebigen Code ausführen kann.



Ausgenutzte Schwachstellen
---------------------------

Der `Known Exploited Vulnerabilities (KEV) Katalog der CISA <https://www.cisa.gov/known-exploited-vulnerabilities-catalog>`__ umfasst Produkte deren Schwachstellen ausgenutzt wurden oder aktiv ausgenutzt werden.  
 
.. class:: incremental

- Kriterien für die Aufnahme in den KEV Katalog:

  1. Eine CVE-Id liegt vor
  2. Aktive Ausnutzung (:eng:`Active Exploitation`) (ggf. reicht es wenn :ger-quote:`nur` ein *Honeypot* aktiv angegriffen wurde) - ein PoC reicht nicht aus
  3. eine Handlungsempfehlung liegt vor (z. B. Patch, Workaround oder vollständige Abschaltung)
- Firmen sollten die KEV Schwachstellen priorisieren, um die Wahrscheinlichkeit eines erfolgreichen Angriffs zu verringern. (Ausgewählte Amerikanische Behörden sind sogar verpflichtet innerhalb vorgegebener Zeiträume zu reagieren.)



.. class:: vertical-title tiny

Erzwungene Außerbetriebnahme von Produkten
------------------------------------------------------------

.. image:: images/cisa-forced-take-down.png
    :height: 1150px
    :class: picture
    :align: center



2023 CWE Top 10 KEV Weaknesses
-------------------------------

.. csv-table::
    :class: small highlight-line-on-hover
    :header: Schwachstelle, CWE ID, # CVE Mappings in KEV, Avg. CVSS

    Use After Free, 416, 44, 8.54
    Heap-based Buffer Overflow, 122, 32, 8.79
    Out-of-bounds Write, 787, 34, 8.19
    Improper Input Validation, 20, 33, 8.27
    Improper Neutralization of Special Elements used in an OS Command ("OS Command Injection"), 78, 25, 9.36
    Deserialization of Untrusted Data, 502, 16, 9.06
    Server-Side Request Forgery (SSRF), 918, 16, 8.72
    Access of Resource Using Incompatible Type ("Type Confusion"), 843, 16, 8.61
    Improper Limitation of a Pathname to a Restricted Directory ("Path Traversal"), 22, 14, 8.09
    Missing Authentication for Critical Function, 306,  8, 8.86



Offenlegung von Sicherheitslücken nach `CISA <https://www.cisa.gov/coordinated-vulnerability-disclosure-process>`__ [#]_
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

:eng:`Coordinated Vulnerability Disclosure (CVD)`

.. class:: incremental smaller

1. Sammlung von Schwachstellenmeldungen
   
   - Eigene Schwachstellenanalysen
   - Überwachung öffentlicher Quellen
   - Direkte Meldungen von Herstellern, Forschern und Nutzern
  
2. Analyse der Schwachstellenmeldungen zusammen mit den Herstellern, um die Sicherheitsauswirkungen zu verstehen
3. Entwicklung von Strategien zur Eindämmung der Schwachstellen; insbesondere Entwicklung von notwendigen Patches
4. Anwendung der Strategien zur Eindämmung der Schwachstellen in Zusammenarbeit mit dem Hersteller und ggf. betroffenen Nutzern
5. Veröffentlichung der Schwachstellenmeldung in Abstimmung mit der Quelle des Schwachstellenberichts und dem Hersteller

.. container:: supplemental

    **CISA** (America's Cybersecurity and Infrastructure Security Agency/Cyber Defense Agency).

.. [#] Das BSI verfährt ähnlich.



Zeitlicher Rahmen für die Offenlegung von Sicherheitslücken
--------------------------------------------------------------

Der Zeitrahmen für die Offenlegung von Sicherheitslücken wird durch folgende Faktoren bestimmt:

.. class:: incremental 

- Aktive Ausnutzung der Schwachstelle
- besonders kritische Schwachstellen
- Auswirkungen auf Standards
- bereits öffentlich bekannt zum Beispiel durch einen Forscher
- Auswirkungen auf die kritische Infrastruktur, öffentliche Gesundheit und Sicherheit
- die Verfügbarkeit von effektiven Eindämmungsmaßnahmen
- das Verhalten des Herstellers und die Möglichkeit der Entwicklung eines Patches
- Schätzung des Herstellers wie lange es dauert einen Patch zu entwickeln, zu testen und auszurollen.



Welche neuen Schwachstellen werden in absehbarer Zeit ausgenutzt?
----------------------------------------------------------------------------

.. admonition:: Beobachtung 
    :class: the-blue-background

    Am 1. Oktober 2023 hat die NVD 139.473 CVSS veröffentlicht. In den folgenden 30 Tagen wurden 3.852 CVEs beobachtet, die ausgenutzt (:eng:`exploited`) wurden. 

    Ca. 5-6% aller Schwachstellen werden :ger-quote:`irgendwann` ausgenutzt. [#]_
    
.. admonition:: Frage
    :class: question incremental 

    Wie stelle ich sicher, dass ich meine Bemühungen zum Beseitigen der Schwachstellen auf diejenigen konzentriere, die am wahrscheinlichsten zeitnahe ausgenutzt werden?

.. [#] Fortinet, `Threat Landscape Report Q2 2018 <https://www.fortinet.com/content/dam/fortinet/assets/threat-reports/q2-2018-threat-landscape-report.pdf>`__



Nutzung des CVSS als Grundlage für die Schätzung?
----------------------------------------------------------------------------

Annahme: Schwachstellen mit einem CVSS Score :math:`\geq` 7 (d. h. mit einer Bewertung von Hoch oder kritisch) werden ausgenutzt.

.. class:: incremental

- 80.024 Schwachstellen haben einen CVSS Score :math:`\geq` 7
  
  **Ausgenutzt wurden: 3.166**
- 59.449 Schwachstellen haben eine CVSS :math:`<` 7
  
  **Ausgenutzt wurden: 686**

.. container:: incremental assessment smaller

    **Zusammenfassung:**

    d. h. die Strategie "Priorisierung von Schwachstellen mit einem CVSS Score :math:`\geq` 7" ist keine geeignete Strategie, da sie nicht alle relevanten  Schwachstellen erfasst (686 *False Negatives*) und - ganz insbesondere - zu viele Schwachstellen (76.858 *False Positives*) erfasst, die nicht ausgenutzt werden.



`Exploit Prediction Scoring System (EPSS) <https://www.first.org/epss/>`__
--------------------------------------------------------------------------

.. class:: incremental

- EPSS ist eine Methode zur *Bewertung der Wahrscheinlichkeit*, dass eine Schwachstelle in den nächsten 30 Tagen ausgenutzt wird
- EPSS basiert auf der Analyse von Schwachstellen, die in den letzten 12 Monaten ausgenutzt wurden
- EPSS nutzt KI basierend auf folgenden Informationen (Stand Jan. 2024):

  .. class:: incremental smaller

  - Hersteller
  - Alter der Schwachstelle (Tage seit der Veröffentlichung des CVEs)
  - die Beschreibung der Schwachstelle
  - betroffene CWEs
  - CVSS Bewertungen der Schwachstellen
  - Wird der CVE auf bekannten Listen diskutiert bzw. aufgelistet?
  - Gibt es öffentliche verfügbare Exploits?



Nutzung des EPSS für die Schätzung? [#]_
----------------------------------------------------------------------------

Annahme: Schwachstellen mit EPSS 10% und größer sind werden ausgenutzt werden.


.. class:: incremental

- 3.735 Schwachstellen haben ein Wahrscheinlichkeit von EPSS 10% und größer
  
  **Ausgenutzt wurden: 2.4356**
- 135.738 Schwachstellen haben ein EPSS :math:`<` 10%
    
  **Ausgenutzt wurden: 1.417**

.. container:: incremental assessment smaller

    **Zusammenfassung:**

    d. h. die Strategie "Priorisierung von Schwachstellen mit einem EPSS von 10% und höher" ist eine geeignetere Strategie, da noch immer sehr viele  relevante Schwachstellen erfasst werden und - ganz insbesondere - die Anzahl der zu beachtenden Schwachstellen ganz massiv reduziert wird ohne die Gesamtqualität zu stark zu beeinflussen.

.. [#] `Enhancing Vulnerability Prioritization: Data-Driven Exploit Predictions with Community-Driven Insights <https://arxiv.org/abs/2302.14172>`__



.. class:: new-section transition-fade

Schwachstellenmanagement
---------------------------

`Vulnerabilities Equities Process (VEP) (USA) <https://trumpwhitehouse.archives.gov/sites/whitehouse.gov/files/images/External%20-%20Unclassified%20VEP%20Charter%20FINAL.PDF>`__ [#]_
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

.. epigraph::

    [...] Der *Vulnerability-Equity-Process (VEP)* wägt ab, ob Informationen über Schwachstellen an den Hersteller/Lieferanten weitergegeben werden sollen, in der Erwartung, dass sie gepatcht werden, oder ob die Kenntnis der Schwachstelle vorübergehend auf die US-Regierung und möglicherweise andere Partner beschränkt werden soll, damit sie für Zwecke der nationalen Sicherheit und der Strafverfolgung, wie z. B. nachrichtendienstliche Erfassung, militärische Operationen und/oder Spionageabwehr, genutzt werden können. [...]

    -- Übersetzt von www.DeepL.com/Translator 

.. [#] die rechtlichen Rahmenbedingungen bzgl. eines effektiven Schwachstellenmanagement sind in Deutschland gerade in der Diskussion. (Stand Jan. 2024); Schwachstellen, die direkt an das BSI gemeldet werden, unterliegen dem CVD.

.. container:: supplemental

    Insbesondere durch die föderale Struktur in Deutschland kann es ggf. dazu kommen, dass bezüglich der Handhabung von Schwachstellen unterschiedliche rechtliche Regelungen gelten werden - je nachdem ob die Behörde eine Bundes- oder Landesbehörde ist.


`Vulnerabilities Equities Process (VEP) (USA) <https://trumpwhitehouse.archives.gov/sites/whitehouse.gov/files/images/External%20-%20Unclassified%20VEP%20Charter%20FINAL.PDF>`__
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


.. epigraph::

    [...] Die Entscheidung der US-Regierung, ob eine Schwachstelle veröffentlicht oder eingeschränkt werden soll, ist nur ein Element des Prozesses zur Bewertung der Schwachstellen und ist nicht immer eine binäre Entscheidung. Andere Optionen, die in Betracht gezogen werden können, sind die Verbreitung von Informationen zur Schadensbegrenzung an bestimmte Stellen, ohne die jeweilige Schwachstelle offenzulegen, die Einschränkung der Nutzung der Schwachstelle durch die US-Regierung in irgendeiner Weise, die Information von Regierungsstellen der USA und verbündeter Staaten über die Schwachstelle [...]. 
    -- Übersetzt von DeepL
    
`Vulnerabilities Equities Process (VEP) (USA) <https://trumpwhitehouse.archives.gov/sites/whitehouse.gov/files/images/External%20-%20Unclassified%20VEP%20Charter%20FINAL.PDF>`__
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


.. epigraph::

    [...] Alle diese Entscheidungen müssen auf der Grundlage des Verständnisses der Risiken einer Verbreitung, des potenziellen Nutzens von Schwachstellen durch die Regierung sowie der Risiken und Vorteile aller dazwischen liegenden Optionen getroffen werden. [...]

    -- Übersetzt von DeepL



Schwachstellenmanagement in Deutschland (2021-2025)
-------------------------------------------------------------

.. epigraph::

    [...] Die Ausnutzung von Schwachstellen von IT-Systemen steht in einem hochproblematischen Spannungsverhältnis zur IT-Sicherheit und den Bürgerrechten. Der Staat wird daher keine Sicherheitslücken ankaufen oder offenhalten, sondern sich in einem Schwachstellenmanage- ment unter Federführung eines unabhängigeren Bundesamtes für Sicherheit in der Informa- tionstechnik immer um die schnellstmögliche Schließung bemühen.[...]

    -- KOALITIONSVERTRAG 2021—2025 (SPD, BÜNDNIS 90/DIE GRÜNEN, FDP)
    


.. class:: integrated-exercise transition-move-left

CVEs - Übung
---------------------------------------------------------------

.. exercise:: 

   1. Finden Sie Schwachstellen, die macOS Sonoma betreffen.

   2. Finden Sie heraus um was es bei CVE-2020-20095 geht.

   .. solution::
      :pwd: Die Schwachstellen
    
      1. Auf https://nvd.nist.gov/search "macOS Sonoma" eingeben:

         https://nvd.nist.gov/vuln/search/results?form_type=Basic&results_type=overview&query=macOS+Sonoma&search_type=all&isCpeNameSearch=false

      2. Es handelt sich um eine URI Spoofing Attacke bei der Nutzer dazu verleitet werden können, auf einen scheinbar harmlosen Link zu klicken, der sie auf eine bösartige Webseite umleitet.

        Proof of Concept (PoC):  https://github.com/zadewg/RIUS

